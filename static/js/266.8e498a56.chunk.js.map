{"version":3,"file":"static/js/266.8e498a56.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://www.delivery.com/./src/pages/shopPage.module.css?088b","pages/shopPage.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"shopPage_container__vYBAd\",\"shopBlock\":\"shopPage_shopBlock__U1Xe0\",\"productContainer\":\"shopPage_productContainer__WCed5\",\"productList\":\"shopPage_productList__UItdi\",\"product\":\"shopPage_product__1w099\",\"productImage\":\"shopPage_productImage__T+kFZ\",\"productName\":\"shopPage_productName__kWKmj\",\"productBtn\":\"shopPage_productBtn__s993g\",\"shopList\":\"shopPage_shopList__pA2m2\",\"shopBtn\":\"shopPage_shopBtn__Rw6eG\",\"shopBtnActive\":\"shopPage_shopBtnActive__SPy23\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from '../pages/shopPage.module.css';\n\nimport burger from 'images/burger.jpg';\nimport Cheeseburger from 'images/Cheeseburger.jpg';\nimport crispyChicken from 'images/crispyChicken.jpg';\nimport fish from 'images/fish.jpg';\nimport Fries from 'images/Fries.jpg';\nimport Muffin from 'images/Muffin.jpg';\nimport CinnamonRoll from 'images/CinnamonRoll.jpg';\nimport Cappuccino from 'images/Cappuccino.jpg';\nimport Americano from 'images/Americano.jpg';\nimport Juice from 'images/Juice.jpg';\n\nconst Shops = ({ addToCart }) => {\n  const shops = [\n    { id: 1, name: 'MC Donny' },\n    { id: 2, name: 'CMF' },\n    { id: 3, name: 'Dr Jack' },\n    { id: 4, name: 'Bistro' },\n    { id: 5, name: 'Burger House' },\n    { id: 6, name: 'Sandwich World' },\n    { id: 7, name: 'Coffee & bread' },\n  ];\n\n  const [selectedShopId, setSelectedShopId] = useState(null);\n\n  const toggle = value => {\n    if (selectedShopId === value) {\n      setSelectedShopId(null);\n    } else {\n      setSelectedShopId(value);\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.shopBlock}>\n        <ul className={css.shopList}>\n          {shops.map(shop => (\n            <li key={shop.id}>\n              <button\n                onClick={() => toggle(shop.id)}\n                className={\n                  selectedShopId === shop.id ? css.shopBtnActive : css.shopBtn\n                }\n                disabled={selectedShopId && selectedShopId !== shop.id}\n              >\n                {shop.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {selectedShopId && <Shop shopId={selectedShopId} addToCart={addToCart} />}\n    </div>\n  );\n};\n\nexport const Shop = ({ addToCart }) => {\n  const products = [\n    { id: nanoid(), name: 'Big Burger', price: 20, image: burger },\n    { id: nanoid(), name: 'Cheeseburger', price: 12, image: Cheeseburger },\n    { id: nanoid(), name: 'Crispy Chicken', price: 15, image: crispyChicken },\n    { id: nanoid(), name: 'Fish Filet Patty', price: 15, image: fish },\n    { id: nanoid(), name: 'Fries', price: 10, image: Fries },\n    { id: nanoid(), name: 'Blueberry Muffin', price: 8, image: Muffin },\n    { id: nanoid(), name: 'Cinnamon Roll', price: 8, image: CinnamonRoll },\n    { id: nanoid(), name: 'Cappuccino', price: 10, image: Cappuccino },\n    { id: nanoid(), name: 'Americano', price: 8, image: Americano },\n    { id: nanoid(), name: 'Juice', price: 5, image: Juice },\n  ];\n\n  const handleAddToCart = product => {\n    const cartItem = {\n      id: nanoid(),\n      name: product.name,\n      price: product.price,\n      image: product.image,\n      quantity: 1,\n    };\n    addToCart(cartItem);\n  };\n\n  return (\n    <div className={css.productContainer}>\n      <ul className={css.productList}>\n        {products.map(product => (\n          <li key={product.id} className={css.product}>\n            <img\n              className={css.productImage}\n              src={product.image}\n              alt={product.name}\n            />\n            <p className={css.productName}>\n              {product.name} - ${product.price}\n            </p>\n            <button\n              onClick={() => handleAddToCart(product)}\n              className={css.productBtn}\n            >\n              add to Cart\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Shops;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Shop","addToCart","products","name","price","image","burger","Cheeseburger","crispyChicken","fish","Fries","Muffin","CinnamonRoll","Cappuccino","Americano","Juice","className","css","map","product","src","alt","onClick","cartItem","quantity","handleAddToCart","useState","selectedShopId","setSelectedShopId","shop","value","disabled","shopId"],"sourceRoot":""}